version: '3.8'
services:
  publicapi:
    build:
      context: ./server
      dockerfile: cmd/publicapi/Dockerfile
    container_name: publicapi
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      db:
        condition: service_healthy

    networks:
      - db
      - rabbitmq
  model:
    build:
      context: ./clusterizer
      dockerfile: Dockerfile
    container_name: model
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      db:
        condition: service_healthy
#      rabbitmq:
#        condition: service_healthy
    environment:
      CONFIG_PATH: prod.yaml

    networks:
      - db
      - rabbitmq
  db:
    image: postgres:14.6
    restart: always
    container_name: diplomdb
    hostname: localhost
    environment:
      POSTGRES_DB: diplom
      POSTGRES_USER: diplom
      POSTGRES_PASSWORD: diplom
    ports:
      - "6432:6432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d diplom -U diplom"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - db

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
  migrate:
    image: migrate/migrate
    container_name: db_migrations
    networks:
      - db
    volumes:
      - ./migration:/migration
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
    command: -path=./migration -database postgresql://diplom:diplom@localhost:6432/diplom?sslmode=disable up
networks:
  db:
    driver: bridge
  rabbitmq:
    driver: bridge


volumes:
  postgres_data:
  rabbitmq_data:
